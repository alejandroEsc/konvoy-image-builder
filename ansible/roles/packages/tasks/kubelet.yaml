---
- name: create kubelet systemd directory
  file:
    path: "/etc/systemd/system/kubelet.service.d/"
    state: directory

- name: remove versionlock for kubelet and kubectl packages
  command: yum versionlock delete {{ item }}
  with_items:
    - kubelet
    - kubectl
  args:
    warn: false
  ignore_errors: True
  register: command_result
  changed_when: 'command_result.stdout is regex(".*versionlock deleted: [1-9]+.*")'
  when:
    - ansible_os_family == 'RedHat'
    - versionlocklist is defined and versionlocklist.stdout is defined
    - item in versionlocklist.stdout
    - not package_versions.kubernetes_rpm in versionlocklist.stdout

- name: install kubectl rpm package
  yum:
    name: "{{ 'kubectl-' + package_versions.kubernetes_rpm }}"
    state: present
    update_cache: yes
  register: result
  until: result is success
  retries: 3
  delay: 3
  when: ansible_os_family == 'RedHat'

- name: install kubelet rpm package
  yum:
    name: "{{ 'kubelet-' + package_versions.kubernetes_rpm }}"
    state: present
    update_cache: yes
  register: kubelet_installation_rpm
  until: kubelet_installation_rpm is success
  retries: 3
  delay: 3
  when: ansible_os_family == 'RedHat'
  notify:
    - reload systemd
    - restart kubelet
    - enable kubelet
    - kubelet health

- name: add versionlock for kubelet and kubectl packages
  command: yum versionlock add {{ item }}
  with_items:
    - kubelet
    - kubectl
  args:
    warn: false
  register: command_result
  changed_when: 'command_result.stdout is regex(".*versionlock added: [1-9]+.*")'
  when: ansible_os_family == 'RedHat'

- name: enable kubelet
  service:
    name: kubelet
    enabled: yes
  notify:
    - reload systemd
    - restart kubelet

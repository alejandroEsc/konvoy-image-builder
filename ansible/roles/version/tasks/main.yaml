---
# NOTE(jkoelker) Grab the build tag (eg. `fips.0` from `v1.21.6+fips.0`)
- name: detect build
  shell: kubeadm version -o short
  register: kubeadm_version_out

- name: set kubeadm version
  set_fact:
    kubeadm_version: "{{ kubeadm_version_out.stdout | trim }}"

# TODO(dkoshkin) remove this hardcoded version when additional images are built for FIPS
# TODO(dkoshkin) remove this hardcoded version when etcd v3.5.x is stable https://github.com/kubernetes/kubeadm/issues/2676 
- name: set hardcoded etcd image
  set_fact:
    hardcoded_etcd_fips_version:  "{{ 'v3.4.13_fips.0' if 'fips' in kubeadm_version else '3.4.13-0' }}"

- name: copy kubeadm config
  template:
    src: "kubeadm-conf.yaml.tmpl"
    dest: "kubeadm-conf.yaml"

- name: determine kubernetes images
  shell: kubeadm config images list --config kubeadm-conf.yaml
  register: kubernetes_kubeadm_images

- name: set kubernetes images
  set_fact:
    kubernetes_images: "{{ kubernetes_kubeadm_images.stdout_lines }}"

- name: set pause image
  set_fact:
    pause_image: "{{
      kubernetes_images |
      select('match', '.*/pause:.*') |
      first
    }}"

- name: determine containerd pause image
  shell: >
    containerd config default |
    sed -n 's/^.*sandbox_image\s*=\s"\(\S*\)".*$/\1/p'
  register: containerd_sandbox_image
  failed_when: containerd_sandbox_image.stdout_lines | length == 0

# NOTE(jkoelker) Event though this will only be a single element, it is a list
#                for concatination convience.
- name: set containerd images
  set_fact:
    containerd_images: "{{ containerd_sandbox_image.stdout_lines }}"
